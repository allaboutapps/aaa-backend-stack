# These are the default environment variables required by your appliation

# This file is directly required by the configure environment of your service, it is there an application specific dependency

# The flow of registering envs is the following (later redeclared env-variables are ignored):
# * 1. Shell/Docker/Kubernetes environment variables
# * 2. env-cmd (via npm scripts): Loads service.env, test.env or introspect.env
# * 3. this env file (via dotenv): Loads common.env

# Furthermore, you want ENFORCE that a specific env-variable is never loader through this common.env file
# flag it as __MUST_BE_DEFINED_EXPLICITLY__ - therefore it must be explicitly defined in steps 1 or 2!

# HEADS UP: NEVER EVER USE INLINE COMMENTS or "" for assignments IN ENVIRONMENT FILES!

NODE_ENV=__MUST_BE_DEFINED_EXPLICITLY__

# HAPI server settings
SERVER_HOST=0.0.0.0
SERVER_PORT=8080

# Specify the timezone the server will be running in
AAA_SERVERDATE_SERVER_TIMEZONE=Europe/Vienna

# Specify an admin secret which can be used to run authorized health checks (node process + database query)
ADMIN_SECRET=<%= CAB_MONITORING_ADMIN_SECRET %>

# postgres env variables to directly use their utilities --> http://www.postgresql.org/docs/8.1/static/libpq-envars.html
# these also get used to connect via our service
PGHOST=127.0.0.1
PGPORT=5432
PGUSER=__MUST_BE_DEFINED_EXPLICITLY__
PGPASSWORD=__MUST_BE_DEFINED_EXPLICITLY__
PGDATABASE=__MUST_BE_DEFINED_EXPLICITLY__

# General application service settings
# if user can authenticate with the guest scope (no refreshtokens are issued to this kind of users)
ALLOW_GUEST_AUTH=false

# Email settings
MAILER_EMAIL_SENDER_DEFAULT=aaa-backend-dev@allaboutapps.at

# Email error reporting (optional)
AAA_LOGGER_EMAIL_SEND=false
AAA_LOGGER_EMAIL_SENDER_DEFAULT=aaa-backend-local@allaboutapps.at
AAA_LOGGER_EMAIL_RECEIVER_ERRORS=operations+aaa-backend-dev@allaboutapps.at

AAA_GIT_INFO_ENABLED=true

# swagger should be enabled in testing environment, so we could test if the /documentation site gets successfully served
HOOKS_ENABLE_SWAGGER=true
HOOKS_ENABLE_WEBSOCKET_DEV_TOOLS=true

# Asset Settings (optional, if static assets hosting is required): an url prefix that will be prepended to all static hosted assets
EXTERNAL_ASSETS_URL_HOST=http://<%= CAB_VAGRANT_IP %>:8080
PUBLIC_API_URL=http://<%= CAB_VAGRANT_IP %>:8080

# Password strength minimum score. See https://github.com/dropbox/zxcvbn
# Recommended minimum score is 3. Maximum is 5. Weak passwords is 1. To disable, set to 0
PASSWORD_STRENGTH_MINIMUM_SCORE=3

# Push notification settings for Android
AAA_PUSHES_PUSH_ANDROID_SEND=false
AAA_PUSHES_PUSH_ANDROID_APIKEY=TODO-REPLACE-WITH-FCM-API-KEY
AAA_PUSHES_PUSH_ANDROID_URL=https://fcm.googleapis.com/fcm/send

# Push notification settings for iOS
AAA_PUSHES_PUSH_IOS_SEND=false
AAA_PUSHES_IOS_APP_BUNDLE_ID=INSERT.BUNDLE.ID.HERE
AAA_PUSHES_PUSH_IOS_JWT_KEY_FILENAME=certs/apn_auth_key.p8
AAA_PUSHES_PUSH_IOS_JWT_KEY_ID=SB8VY5A8GN
AAA_PUSHES_PUSH_IOS_JWT_TEAM_ID=MFEMQEZW8V
AAA_PUSHES_PUSH_IOS_PRODUCTION=false

# Logging Settings
# hapi debug log to console (see http://hapijs.com/api ('debug'))
HAPI_DEBUG_LOG=true
# pipe stdout of LOG_CONSOLE through extra tool (use "cat" if in production mode)...
LOG_CONSOLE_TARGET=__MUST_BE_DEFINED_EXPLICITLY__
# log to stdout?
AAA_LOGGER_LOG_CONSOLE=true
# false or filepath to log to (enable this in production!)
AAA_LOGGER_LOG_FILE=./logs/api-dev.log

# Log file rotation settings, see https://github.com/trentm/node-bunyan#stream-type-rotating-file
AAA_LOGGER_LOG_FILE_ROTATION_ENABLED=true
AAA_LOGGER_LOG_FILE_ROTATION_PERIOD=1d
AAA_LOGGER_LOG_FILE_ROTATION_COUNT=3

# Minimal severity to log (for bunyan json logging provider)
# "trace" (10, logs sequelize generated queries, don't use this in production)
# "debug" (20, logs debug status information (e.g. called routes + payload), use this or a higher setting for production)
# "info" (30, logs main event information startup, tasks, ...)
# "warn" (40)
# "error" (50)
# "fatal" (60)
# minimal severity level to log to console
LOG_LVL=debug
# minimal severity level to log to console
AAA_LOGGER_LOG_FILE_MIN_SEVERITY_LEVEL=trace

# set this to false in production (dangerous this will log user credentials in request payloads!!!)
AAA_LOGGER_LOG_INCLUDE_REQUEST_PAYLOAD=true
# set this to false in production (dangerous this will log user access-token/refresh-token in payload body!!!)
AAA_LOGGER_LOG_INCLUDE_RESPONSE_PAYLOAD=true
# set this to false in production (dangerous this will log user access-tokens in headers!!!)
AAA_LOGGER_LOG_INCLUDE_REQUEST_HEADERS=true

# Operations logging specifics
# log ops (api stats e.g. memory usage, uptime, ...) every 15 minutes
AAA_LOGGER_LOG_OPS_INTERVAL_MS=900000
